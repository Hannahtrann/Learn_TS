console.log("Hello word")
//Variables
var firstName = "Hannah"
let lastName = "Tran"
console.log(firstName);

var age, birthday, gender
age = 18
gender = "Female"
console.log(age);

//Constants: only hold one value and can not re-use 
const job = "Software Engineer"
console.log (job);

//Data types
var firstName = "Hannah" //string
var age = 18 // number
var isAdmin = true //boolean
var yearsInMarriage = null //null
var numberOfKiads = undefined //undefined

//Concatenation
var price = 80
var itemName = "Table"
var message = "The price for your "+itemName+" is "+price+" dollars"
console.log(message);

//Interpolation
var message2 = `The price for your ${itemName} is ${price +1}`
console.log(message2);

var age = 26
var message3 = `Next year, you will be ${age +1} years old`
console.log(message3);

//Objects
var company = {
    companyName: 'Adamo',
    age: 5,
    cars: ["Toyota", "BMW", "Honda"]

}
console.log(company.companyName);

//Arrays
var car = ["Toyota", "BMW", "Honda"]
console.log(car[0]);
car[1] = "Kia"
console.log(car[1]);

console.log(company.cars[1]);

//Relational Operators (toán tử quan hệ): Luôn trả về giá trị true or false 
// > -more than
// < -less than
// >= -more than equal
// <= -less than equal

var result = 5 >= 6
console.log(result);

//Equality Operators (toán tủ so sánh bằng)
// == -so sánh bằng lỏng lẻo: chỉ quan tâm đến giá trị, không quan tâm đến kiểu dữ liệu
console.log(5==5); //true
console.log(0==false); //true

//=== -so sánh bằng chặt chẽ 
console.log(5===5); //true
console.log(5==="5"); //false 

//!= -so sánh không bằng lỏng lẻo
//!=== -so sánh không bằng chặt chẽ


//Logical operators (toán tử logic): thường sử dụng trong câu điều kiện if-else, vòng lặp,...
//Logical AND
console.log(true && true) //all values have to TRUE for expression to be TRUE  
console.log(true && false) //false

//Logical OR 
console.log(true || false) //any value should be TRUE for the experession to be TRUE 

var isMoreThan18 = true
var hasId = true

var permission = isMoreThan18 && hasId
console.log('You has permission to log in');

//Áp dụng toán tử trong vòng lặp: In ra các số chẵn và lớn hơn 2 trong array sau.
var a =[1, 2, 3, 4 ,5, 6, 7, 8];
for (let i = 0; i < a.length; i++) {
    if (a[i] % 2 === 0 && a[i] > 2)
        console.log(a[i])
};

//Logical NOT: 
console.log(!true) //return false 
console.log (5 !==10) //return true 

// //Conditional Statement
// if(condition) {
//     //excutive some code here
// }
// else {
//     //excutive some code here 
// }

//In ra điểm của sinh viên:
var score = 85;
if(score >= 80 && score <= 100) {
    console.log('A')
}
else if(score >= 60 && score <= 79) {
    console.log('B')
}
else {console.log ('C')};

//Bài toán kiểm tra quyền đăng nhập: 
var role = "HR"
if(role === 'admin') {
    console.log('Bạn có toàn quyền truy cập (thêm, sửa, xóa).')
}
else if(role === 'editor') {
    console.log('Bạn có quyền thêm và sửa. ')
}
else {
    console.log('Bạn chỉ có quyền xem.')
}

//Vòng lặp 
//Viết một đoạn mã sử dụng vòng lặp for để in ra các số từ 1 đến 10, mỗi số trên một dòng
for (let i=0; i<11; i++) {
    console.log(i)
}

//Viết một đoạn mã sử dụng vòng lặp for để tính tổng các số từ 1 đến 100 và in ra kết quả:
let sum = 0;
for (let i = 1; i <=100; i++) {
    sum +=i;
}
console.log(+sum);

//Viết một đoạn mã sử dụng vòng lặp while để in ra các số chẵn từ 0 đến 20:
let i = 0;
while (i <= 20) {
    if (i % 2 == 0) {
        console.log(i)
    }
    i++;
}



//Class & Method: 
//Method: Phương thức là các hàm được định nghĩa bên trong một lớp và có thể được gọi bởi các đối tượng của lớp đó
//Tạo một lớp Book với các thuộc tính title, author, và year. Thêm một phương thức getSummary() trả về chuỗi chứa thông tin về cuốn sách.
class Book {
    constructor(title, author, year) {
        this.title = title;
        this.author = author;
        this.year = year;
    }
    getSummary() {
        return `The name of book is ${this.title}, written by ${this.author} in ${this.year}`;
    }
}


const myBook = new Book('Harry poster', 'William', 1865);

console.log(myBook.getSummary());

//tạo lớp Movie với phương thức tĩnh compareYears() để so sánh năm phát hành của hai bộ phim:
class Movie {
    constructor(title, director, year) {
        this.title =title;
        this.director = director; 
        this.year = year;
    }
    static compareYears(movie1, movie2) {
        if (movie1.year < movie2.year) 
            return `${movie1.title} was released before ${movie2.title}`
        else if (movie1.year > movie2.year)
            return `${movie1.title} was released after ${movie2.title}`
        else {
            return `${movie1.title} was released in the same year with ${movie2.title}`
        }
    }
}

const movie1 = new Movie('Lodon has fallen', 'John Smith', 1948);
const movie2 = new Movie('White house has fallen', 'William', 1967);

console.log(Movie.compareYears(movie1,movie2));

//Function: 
//viết một hàm recommendedCar để đưa ra khuyến nghị về loại xe dựa trên kích thước gia đình (familySize)
let familySize = 2; 
let plannedDistanceToDrive = 100;
function recommendedCar(familySize, plannedDistanceToDrive) {
    if (familySize <= 4 && plannedDistanceToDrive < 200) 
    {return `Tesla`}
    else if (familySize <= 4 && plannedDistanceToDrive >= 200) 
    {return `Toyota Camry`}
    else {return `Minivan`}
};

console.log(recommendedCar(familySize, plannedDistanceToDrive));

